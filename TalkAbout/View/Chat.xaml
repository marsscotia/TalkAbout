<Page
    x:Class="TalkAbout.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:TalkAbout"
    xmlns:triggers="using:TalkAbout.Triggers"
    xmlns:views="using:TalkAbout.View"
    xmlns:converters="using:TalkAbout.Converters"
    xmlns:actions="using:TalkAbout.Actions"
    xmlns:interaction="using:Microsoft.Xaml.Interactivity"
    xmlns:core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:media="using:Microsoft.Xaml.Interactions.Media"
    xmlns:behaviours="using:TalkAbout.Behaviours"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    x:Name="ChatPage"
    NavigationCacheMode="Enabled">

    <Page.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="StyleDictionary.xaml" />
            </ResourceDictionary.MergedDictionaries>
        
            
            <Storyboard x:Name="NewCategoryPanelAppear">
                <DoubleAnimation Storyboard.TargetName="NewCategoryPanel" Storyboard.TargetProperty="Opacity" From="0.0" To="1.0" Duration="0:0:0.5"/>
            </Storyboard>
            <CollectionViewSource x:Name="PhrasesViewSource" IsSourceGrouped="True" 
                                  Source="{Binding Phrases}" d:Source="{Binding Phrases}"/>
        </ResourceDictionary>
    </Page.Resources>


    

    <RelativePanel Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <!-- Behaviours and Actions for Keyboard Shortcuts -->
        <interaction:Interaction.Behaviors>
            <behaviours:KeyUpBehaviour Key="B" AndControl="True">
                <core:ChangePropertyAction TargetObject="{Binding ElementName=PhrasesList}" PropertyName="IsZoomedInViewActive" Value="false" />
            </behaviours:KeyUpBehaviour>
            <behaviours:KeyUpBehaviour Key="PageUp">
                <actions:PageScrollAction TargetObject="{Binding ElementName=PhrasesList}" Up="true" />
                <actions:PageScrollAction TargetObject="{Binding ElementName=SortedPhrasesList}" Up="true" />
            </behaviours:KeyUpBehaviour>
            <behaviours:KeyUpBehaviour Key="PageDown">
                <actions:PageScrollAction TargetObject="{Binding ElementName=PhrasesList}" Down="True" />
                <actions:PageScrollAction TargetObject="{Binding ElementName=SortedPhrasesList}" Down="true" />
            </behaviours:KeyUpBehaviour>
            <behaviours:KeyUpBehaviour Key="A" AndControl="True">
                <core:InvokeCommandAction Command="{Binding SetSortCommand}" CommandParameter="{Binding AlphabetSort}" />
            </behaviours:KeyUpBehaviour>
            <behaviours:KeyUpBehaviour Key="G" AndControl="True">
                <core:InvokeCommandAction Command="{Binding SetSortCommand}" CommandParameter="{Binding CategorySort}" />
            </behaviours:KeyUpBehaviour>
            <behaviours:KeyUpBehaviour Key="F" AndControl="True">
                <core:InvokeCommandAction Command="{Binding SetSortCommand}" CommandParameter="{Binding FrequencySort}" />
            </behaviours:KeyUpBehaviour>
            <behaviours:KeyUpBehaviour Key="R" AndControl="True">
                <core:InvokeCommandAction Command="{Binding SetSortCommand}" CommandParameter="{Binding RecentSort}" />
            </behaviours:KeyUpBehaviour>
            <behaviours:KeyUpBehaviour Key="Escape">
                <core:InvokeCommandAction Command="{Binding CancelSaveCommand}" />
            </behaviours:KeyUpBehaviour>
            <behaviours:KeyUpBehaviour Key="S" AndControl="True">
                <core:InvokeCommandAction Command="{Binding SaveCommand}" />
            </behaviours:KeyUpBehaviour>
            <behaviours:KeyUpBehaviour Key="L" AndControl="True">
                <core:InvokeCommandAction Command="{Binding ToggleSelectionModeCommand}" />
            </behaviours:KeyUpBehaviour>
        </interaction:Interaction.Behaviors>

        <!-- Visual states for adaptive layout -->
        <VisualStateManager.VisualStateGroups>
            <!-- Visual states based on device family -->
            <VisualStateGroup x:Name="DeviceFamilyStates">
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyTrigger DeviceFamily="Windows.Mobile" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommandBar.(RelativePanel.AlignBottomWithPanel)" Value="True" />
                        <Setter Target="ContentPanel.(RelativePanel.AlignTopWithPanel)" Value="True" />
                        <Setter Target="ContentPanel.(RelativePanel.Above)" Value="CommandBar" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState>
                    <VisualState.StateTriggers>
                        <triggers:DeviceFamilyTrigger DeviceFamily="Windows.Desktop" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CommandBar.(RelativePanel.AlignTopWithPanel)" Value="True" />
                        <Setter Target="ContentPanel.(RelativePanel.Below)" Value="CommandBar" />
                        <Setter Target="ContentPanel.(RelativePanel.AlignBottomWithPanel)" Value="True" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <!-- Visual states based on screen width -->
            <VisualStateGroup x:Name="ScreenSizeStates">
                <VisualState x:Name="ExtraWide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1024" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="NewCategoryTextBox.(RelativePanel.LeftOf)" Value="ConfirmSavePhraseButton" />
                        <Setter Target="CancelSavePhraseButton.(RelativePanel.AlignTopWithPanel)" Value="True" />
                        <Setter Target="MessagePanel.(RelativePanel.AlignBottomWithPanel)" Value="True" />
                        <Setter Target="PhrasesPanel.(RelativePanel.AlignTopWithPanel)" Value="True" />
                        <Setter Target="ContentPanel.Margin" Value="24, 0, 24, 0" />
                        <Setter Target="MessageWindow.TextWrapping" Value="Wrap" />
                        <Setter Target="PhrasesPanel.RightOf" Value="MessagePanel" />
                        <Setter Target="PhrasesPanel.Margin" Value="20, 0, 0, 0" />
                        <Setter Target="NavigationPanel.(RelativePanel.AlignBottomWithPanel)" Value="True" />
                        <Setter Target="PhrasesList.(RelativePanel.Above)" Value="SelectionModeButton" />
                        <Setter Target="CategoryList.(RelativePanel.Above)" Value="SelectionModeButton" />
                        <Setter Target="SortedPhrasesList.(RelativePanel.Above)" Value="SelectionModeButton" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Wide">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MessagePanel.(RelativePanel.AlignBottomWithPanel)" Value="True" />
                        <Setter Target="PhrasesPanel.(RelativePanel.AlignTopWithPanel)" Value="True" />
                        <Setter Target="ContentPanel.Margin" Value="24, 0, 24, 0" />
                        <Setter Target="MessageWindow.TextWrapping" Value="Wrap" />
                        <Setter Target="PhrasesPanel.RightOf" Value="MessagePanel" />
                        <Setter Target="PhrasesPanel.Margin" Value="20, 0, 0, 0" />
                        <Setter Target="NewCategoryTextBox.(RelativePanel.AlignRightWithPanel)" Value="True" />
                        <Setter Target="CancelSavePhraseButton.(RelativePanel.Below)" Value="NewCategoryTextBox" />
                        <Setter Target="NavigationPanel.(RelativePanel.Above)" Value="SelectionModeButton" />
                        <Setter Target="PhrasesList.(RelativePanel.Above)" Value="NavigationPanel" />
                        <Setter Target="CategoryList.(RelativePanel.Above)" Value="NavigationPanel" />
                        <Setter Target="SortedPhrasesList.(RelativePanel.Above)" Value="NavigationPanel" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Narrow" >
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="MessagePanel.(RelativePanel.AlignRightWithPanel)" Value="True" />
                        <Setter Target="MessagePanel.Height" Value="Auto" />
                        <Setter Target="PhrasesPanel.(RelativePanel.Below)" Value="MessagePanel" />
                        <Setter Target="PhrasesPanel.(RelativePanel.AlignLeftWithPanel)" Value="True" />
                        <Setter Target="ContentPanel.Margin" Value="12, 0, 12, 0" />
                        <Setter Target="NewCategoryTextBox.(RelativePanel.LeftOf)" Value="ConfirmSavePhraseButton" />
                        <Setter Target="CancelSavePhraseButton.(RelativePanel.AlignTopWithPanel)" Value="True" />
                        <Setter Target="NavigationPanel.(RelativePanel.AlignBottomWithPanel)" Value="True" />
                        <Setter Target="PhrasesList.(RelativePanel.Above)" Value="SelectionModeButton" />
                        <Setter Target="CategoryList.(RelativePanel.Above)" Value="SelectionModeButton" />
                        <Setter Target="SortedPhrasesList.(RelativePanel.Above)" Value="SelectionModeButton" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <CommandBar x:Name="CommandBar" 
                        RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignLeftWithPanel="True" >
            <AppBarButton Icon="Setting" Label="Settings" Click="AppBarButton_Click" />
            <AppBarButton Icon="Remote" Label="Abbreviate" Click="AppBarButton_Click_1" />
            <AppBarButton Icon="Message" Label="Pronounce" Click="AppBarButton_Click_2"/>
        </CommandBar>

        

        <RelativePanel x:Name="ContentPanel" 
                       RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" >

            
            
            <!-- MessagePanel: Contains message text box and functions-->
            <RelativePanel x:Name="MessagePanel" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True" >
                <TextBox x:Name="MessageWindow" Margin="0, 10, 0, 10" 
                RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignRightWithPanel="True" 
                         RelativePanel.Above="MessageControlsPanel"
                         FontSize="{x:Bind ViewModel.Settings.FontSize}"
                         PlaceholderText="Type and press speak or enter"
                         Text="{Binding Path=Message, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         >
                    <interaction:Interaction.Behaviors>
                        <core:EventTriggerBehavior EventName="Loaded" >
                            <actions:SetFocusAction TargetObject="{Binding ElementName=MessageWindow}" />
                        </core:EventTriggerBehavior>
                    </interaction:Interaction.Behaviors>
                </TextBox>
                    <StackPanel x:Name="MessageControlsPanel" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignLeftWithPanel="True" 
                            Orientation="Horizontal" >
                    <Button x:Name="SpeakButton" Style="{StaticResource CommandButtonStyle}">
                        <views:ShortcutPanel  CommandShortcut="Enter" SymbolText="" />
                    </Button>
                    <Button x:Name="DeleteWord" Style="{StaticResource CommandButtonStyle}">
                        <views:ShortcutPanel  CommandShortcut="Ctrl + W" SymbolText="" />
                    </Button>
                    <Button x:Name="Clear" Style="{StaticResource CommandButtonStyle}">
                        <views:ShortcutPanel  CommandShortcut="Ctrl + N" SymbolText="" />
                    </Button>
                    <Button x:Name="Save" Style="{StaticResource EndCommandButtonStyle}" Click="{x:Bind ViewModel.SavePhraseMode}">
                        <views:ShortcutPanel  CommandShortcut="Ctrl + S" SymbolText="" />
                    </Button>
                </StackPanel>
            </RelativePanel>

            
            <!-- PhrasesPanel: contains listviews and functions -->
            <RelativePanel x:Name="PhrasesPanel" RelativePanel.AlignBottomWithPanel="True" RelativePanel.AlignRightWithPanel="True" >
                
                <Button x:Name="SelectionModeButton" Style="{StaticResource CommandButtonStyle}" 
                        RelativePanel.AlignRightWithPanel="True" RelativePanel.AlignBottomWithPanel="True" 
                        IsEnabled="{x:Bind ViewModel.SelectionModeEnabled, Mode=OneWay}" Click="{x:Bind ViewModel.ToggleSelectionMode}">
                    <views:ShortcutPanel CommandShortcut="Ctrl + l" SymbolText="" />
                </Button>

                <Button x:Name="CategorySortButton" 
                        Style="{StaticResource CommandButtonStyle}"
                        RelativePanel.AlignRightWithPanel="True" 
                        RelativePanel.AlignTopWithPanel="True"
                        Visibility="{x:Bind ViewModel.Settings.ShowSorting, Converter={StaticResource BooleanVisibilityConverter}}"
                        Command="{Binding SetSortCommand}" 
                        CommandParameter="{Binding CategorySort}">
                    <views:ShortcutPanel CommandShortcut="Ctrl + g" SymbolText="" />
                </Button>

                <Button x:Name="AlphabetSortButton" 
                        Style="{StaticResource CommandButtonStyle}"
                        RelativePanel.Below="CategorySortButton" 
                        RelativePanel.AlignRightWith="CategorySortButton"
                        Visibility="{x:Bind ViewModel.Settings.ShowSorting, Converter={StaticResource BooleanVisibilityConverter}}"
                        Command="{Binding SetSortCommand}"
                        CommandParameter="{Binding AlphabetSort}">
                       
                    <views:ShortcutPanel CommandShortcut="Ctrl + a" PlainText="A-Z" />
                </Button>

                <Button x:Name="RecentSortButton" 
                        Style="{StaticResource CommandButtonStyle}"
                        RelativePanel.Below="AlphabetSortButton" 
                        RelativePanel.AlignRightWith="CategorySortButton"
                        Visibility="{x:Bind ViewModel.Settings.ShowSorting, Converter={StaticResource BooleanVisibilityConverter}}"
                        Command="{Binding SetSortCommand}"
                        CommandParameter="{Binding RecentSort}">
                    <views:ShortcutPanel CommandShortcut="Ctrl + r" SymbolText="" />
                </Button>

                <Button x:Name="FrequencySortButton" 
                        Style="{StaticResource CommandButtonStyle}"
                        RelativePanel.Below="RecentSortButton" 
                        RelativePanel.AlignRightWith="CategorySortButton"
                        Visibility="{x:Bind ViewModel.Settings.ShowSorting, Converter={StaticResource BooleanVisibilityConverter}}"
                        Command="{Binding SetSortCommand}"
                        CommandParameter="{Binding FrequencySort}">
                    <views:ShortcutPanel CommandShortcut="Ctrl + f" PlainText="1-3" />
                </Button>

                <!-- NewCategoryPanel: contains textbox and functions for creating new category -->
                <RelativePanel x:Name="NewCategoryPanel" RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignTopWithPanel="True" 
                               RelativePanel.LeftOf="CategorySortButton" Visibility="{x:Bind ViewModel.ShowNewCategoryPanel, Converter={StaticResource BooleanVisibilityConverter}, Mode=OneWay}">
                    
                    <interaction:Interaction.Behaviors>
                        <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=NewCategoryPanel}" Value="Visible" >
                            <actions:SetFocusAction TargetObject="{Binding ElementName=NewCategoryTextBox}" />
                            <media:ControlStoryboardAction Storyboard="{StaticResource NewCategoryPanelAppear}" ControlStoryboardOption="Play" />
                        </core:DataTriggerBehavior>
                        <core:DataTriggerBehavior Binding="{Binding Visibility, ElementName=NewCategoryPanel}" Value="Collapsed" >
                            <actions:SetFocusAction TargetObject="{Binding ElementName=MessageWindow}" />
                        </core:DataTriggerBehavior>
                    </interaction:Interaction.Behaviors>
                    <Button x:Name="CancelSavePhraseButton" Style="{StaticResource CommandButtonStyle}"
                             RelativePanel.AlignRightWithPanel="True" Command="{Binding CancelSaveCommand}">
                        <views:ShortcutPanel CommandShortcut="Escape" SymbolText="" />
                    </Button>

                    <Button x:Name="ConfirmSavePhraseButton" Style="{StaticResource CommandButtonStyle}" 
                            RelativePanel.LeftOf="CancelSavePhraseButton" RelativePanel.AlignTopWith="CancelSavePhraseButton" Click="{x:Bind ViewModel.AddNewPhraseAndNewCategory}">
                        <views:ShortcutPanel CommandShortcut="Enter" SymbolText="" />
                    </Button>

                    <TextBox x:Name="NewCategoryTextBox" Margin="0, 10, 10, 0"
                             RelativePanel.AlignLeftWithPanel="True"  RelativePanel.AlignTopWithPanel="True"
                             PlaceholderText="Type or select a category"
                             Text="{Binding Path=NewCategory, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                             />

                </RelativePanel>

                <Button x:Name="DeletePhrasesButton" Style="{StaticResource CommandButtonStyle}"
                        RelativePanel.LeftOf="SelectionModeButton" RelativePanel.AlignBottomWithPanel="True"
                        Visibility="{x:Bind ViewModel.SelectionMode, Mode=OneWay, Converter={StaticResource BooleanVisibilityConverter}}"
                        Command="{Binding DeletePhrasesCommand}" CommandParameter="{Binding ElementName=ZoomedInList, Converter={StaticResource SelectedItemsConverter}}">
                    <views:ShortcutPanel CommandShortcut="Delete" SymbolText="" />
                </Button>

                <!-- NavigationPanel: contains functions for navigating lists -->
                <RelativePanel x:Name="NavigationPanel" 
                               RelativePanel.AlignLeftWithPanel="True" 
                               Visibility="{x:Bind ViewModel.Settings.ShowNavigation, Converter={StaticResource BooleanVisibilityConverter}}">
                    <Button x:Name="DownButton" Style="{StaticResource CommandButtonStyle}"
                        RelativePanel.AlignLeftWithPanel="True" RelativePanel.AlignBottomWithPanel="True">
                        <interaction:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Click">
                                <actions:PageScrollAction TargetObject="{Binding ElementName=PhrasesList}" Down="true" />
                                <actions:PageScrollAction TargetObject="{Binding ElementName=SortedPhrasesList}" Down="true" />
                            </core:EventTriggerBehavior>
                        </interaction:Interaction.Behaviors>
                        <views:ShortcutPanel CommandShortcut="PgDn" SymbolText="" />
                    </Button>

                    <Button x:Name="UpButton" Style="{StaticResource CommandButtonStyle}" 
                        RelativePanel.RightOf="DownButton" RelativePanel.AlignBottomWithPanel="True">
                        <interaction:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Click">
                                <actions:PageScrollAction TargetObject="{Binding ElementName=PhrasesList}" Up="true" />
                                <actions:PageScrollAction TargetObject="{Binding ElementName=SortedPhrasesList}" Up="True" />
                            </core:EventTriggerBehavior>
                        </interaction:Interaction.Behaviors>
                        <views:ShortcutPanel CommandShortcut="PgUp" SymbolText="" />
                    </Button>

                    <Button x:Name="BackButton" Style="{StaticResource CommandButtonStyle}" 
                        RelativePanel.RightOf="UpButton" RelativePanel.AlignBottomWithPanel="True">
                        <interaction:Interaction.Behaviors>
                            <core:EventTriggerBehavior EventName="Click">
                                <core:ChangePropertyAction TargetObject="{Binding ElementName=PhrasesList}" PropertyName="IsZoomedInViewActive" Value="false" />
                            </core:EventTriggerBehavior>
                        </interaction:Interaction.Behaviors>
                        <views:ShortcutPanel CommandShortcut="Ctrl + b" SymbolText="" />
                    </Button>
                </RelativePanel>
                
                
                
                <!-- PhrasesList: SemanticZoom between phrases and categories -->
                <SemanticZoom x:Name="PhrasesList" 
                              Visibility="{Binding ShowPhrasesList, Converter={StaticResource BooleanVisibilityConverter}}"
                              RelativePanel.LeftOf="CategorySortButton" 
                              RelativePanel.AlignLeftWithPanel="True"
                              RelativePanel.Below="NewCategoryPanel"
                              Margin="0, 10, 10, 0">
                    <SemanticZoom.ZoomedInView>
                        <ListView x:Name="ZoomedInList" 
                            ItemsSource="{Binding Source={StaticResource PhrasesViewSource}}"
                            SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay, Converter={StaticResource SelectionModeConverter}}">
                            <ListView.ItemTemplate>
                                <DataTemplate >
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock Text="{Binding Name}" 
                                                   TextWrapping="Wrap" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                            <ListView.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <StackPanel>
                                                <TextBlock Text="{Binding Key.Name}" />
                                            </StackPanel>
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ListView.GroupStyle>
                        </ListView>
                    </SemanticZoom.ZoomedInView>
                    <SemanticZoom.ZoomedOutView>
                        <ListView ItemsSource="{Binding Source={StaticResource PhrasesViewSource}, ElementName=PhrasesViewSource, Path=CollectionGroups}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel>
                                        <TextBlock Text="{Binding Group.Key.Name}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </SemanticZoom.ZoomedOutView>
                </SemanticZoom>

                <!-- CategoryList: List of categories, used when adding phrases -->
                <ListView x:Name="CategoryList" RelativePanel.LeftOf="CategorySortButton" 
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.Below="NewCategoryPanel"
                          Visibility="{Binding ShowCategoryList, Converter={StaticResource BooleanVisibilityConverter}}"
                          ItemsSource="{Binding CategoryList, Mode=OneWay}" SelectedItem="{Binding SelectedCategory, Mode=TwoWay}"
                          SelectionChanged="{x:Bind ViewModel.AddNewPhraseToSelectedCategory}"
                          SelectionMode="Single"
                          Margin="0, 10, 10, 0">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                
                <!-- SortedPhrasesList: List of ungrouped phrases which can be sorted -->
                <ListView x:Name="SortedPhrasesList"
                          RelativePanel.LeftOf="CategorySortButton"
                          RelativePanel.AlignLeftWithPanel="True"
                          RelativePanel.Below="NewCategoryPanel"
                          Visibility="{Binding ShowSortedPhrasesList, Converter={StaticResource BooleanVisibilityConverter}}"
                          ItemsSource="{Binding SortedPhrases, Mode=OneWay}"
                          SelectionMode="{x:Bind ViewModel.SelectionMode, Mode=OneWay ,Converter={StaticResource SelectionModeConverter}}"
                          Margin="0, 10, 10, 0">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding Name}" />
                            </StackPanel>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                    
                </ListView>
                    
            </RelativePanel>

            <!-- ErrorPanel: a panel for displaying error messages to users -->
            <RelativePanel x:Name="ErrorPanel" RelativePanel.AlignTopWithPanel="True" RelativePanel.AlignLeftWithPanel="True" 
                           RelativePanel.AlignRightWithPanel="True" Visibility="{Binding ShowError, Converter={StaticResource BooleanVisibilityConverter}}"
                           Background="Red" Padding="5">
                <TextBlock x:Name="ErrorText" RelativePanel.AlignVerticalCenterWithPanel="True" Margin="0, 4, 0, 0" Text="{Binding Error, Mode=OneWay}" FontSize="{Binding Settings.FontSize}"
                           Foreground="White"/>
            </RelativePanel>

        </RelativePanel>

    </RelativePanel>
</Page>
